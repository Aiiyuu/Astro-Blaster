{"version":3,"sources":["loop/handleRotation.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,MAAM,MAAM,cAAc,CAAC;AAClC,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAGpD,MAAM,CAAC,OAAO,UAAU,cAAc,CAAC,MAAc;IACjD,iDAAiD;IACjD,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACvB,MAAM,CAAC,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC;IACxE,CAAC;SAAM,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QAC9B,MAAM,CAAC,sBAAsB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC;IACzE,CAAC;SAAM,CAAC;QACJ,MAAM,CAAC,sBAAsB,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,kBAAkB,IAAI,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC;IACjE,CAAC;IAED,qCAAqC;IACrC,MAAM,CAAC,kBAAkB,IAAI,MAAM,CAAC,sBAAsB,CAAC;IAC3D,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;QACzE,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC;IACxG,CAAC;AACL,CAAC","file":"handleRotation.js","sourcesContent":["/**\n * handleRotation.ts\n *\n * Handles the player's rotation based on keyboard input.\n * Applies acceleration, friction, and caps rotational speed.\n */\n\nimport config from '../config.js';\nimport { isKeyPressed } from '../input/keyboard.js';\nimport Player from '../entities/player.js';\n\nexport default function handleRotation(player: Player): void {\n    // Set rotational acceleration based on key input\n    if (isKeyPressed('KeyD')) {\n        player.rotationalAcceleration = config.player.rotation_acceleration;\n    } else if (isKeyPressed('KeyA')) {\n        player.rotationalAcceleration = -config.player.rotation_acceleration;\n    } else {\n        player.rotationalAcceleration = 0;\n        player.rotationalVelocity *= config.player.rotation_friction;\n    }\n\n    // Update and cap rotational velocity\n    player.rotationalVelocity += player.rotationalAcceleration;\n    if (Math.abs(player.rotationalVelocity) > config.player.max_rotation_speed) {\n        player.rotationalVelocity = Math.sign(player.rotationalVelocity) * config.player.max_rotation_speed;\n    }\n}"]}