{"version":3,"sources":["loop/updateProjectiles.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,MAAM,MAAM,cAAc,CAAC;AAGlC,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,WAAyB;IAC/D,+DAA+D;IAC/D,KAAK,IAAI,CAAC,GAAW,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QACvD,MAAM,UAAU,GAAe,WAAW,CAAC,CAAC,CAAC,CAAC;QAE9C,mCAAmC;QACnC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEpB,MAAM,GAAG,GAA4B,UAAU,CAAC,WAAW,EAAE,CAAC;QAE9D,6DAA6D;QAC7D,IACI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW;YAC5C,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,EAC/C,CAAC;YACC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC;IACL,CAAC;AACL,CAAC","file":"updateProjectiles.js","sourcesContent":["/**\n * updateProjectiles.ts\n *\n * Updates the position of each projectile and removes any that go off-screen.\n */\n\nimport config from '../config.js';\nimport Projectile from '../entities/projectile.js'\n\nexport default function updateProjectiles(projectiles: Projectile[]): void {\n    // Iterate backwards to safely remove projectiles while looping\n    for (let i: number = projectiles.length - 1; i >= 0; i--) {\n        const projectile: Projectile = projectiles[i];\n\n        // Update projectile position/state\n        projectile.update();\n\n        const pos: { x: number, y:number } = projectile.getPosition();\n\n        // Remove projectile if it goes outside the canvas boundaries\n        if (\n            pos.x < 0 || pos.x > config.game.canvasWidth ||\n            pos.y < 0 || pos.y > config.game.canvasHeight\n        ) {\n            projectiles.splice(i, 1);\n        }\n    }\n}"]}