{"version":3,"sources":["core/spawnMeteorite.ts"],"names":[],"mappings":"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","file":"spawnMeteorite.js","sourcesContent":["/**\n * spawnMeteorite.ts\n *\n * Creates and adds a new meteorite to the game at a random position.\n * Controls the meteorite's initial properties such as size, speed, and trajectory.\n */\n\nimport config from '../config.js';\nimport Meteorite from '../entities/meteorite.js'\n\n\n// Stores the interval ID for spawning meteorites, used to clear the interval later\nlet meteoriteSpawnInterval: NodeJS.Timeout;\nlet meteoriteSpawnIntervalTime: number = config.meteorite.spawn_interval;\n\n\n/**\n * Generates a random spawn position along the continuous rectangular perimeter\n * surrounding the game canvas, including a margin outside the visible area.\n *\n * The position is uniformly distributed along the entire outer rectangle's\n * border (top, right, bottom, and left edges combined), allowing meteorites\n * to spawn anywhere around the canvas edges seamlessly without explicitly\n * enumerating corners or edges.\n *\n * @returns An object with x and y coordinates representing the spawn position\n *          just outside the visible canvas boundary.\n */\nfunction getRandomEdgePosition(): { x: number, y: number } {\n    const canvasWidth: number = config.game.canvasWidth;\n    const canvasHeight: number = config.game.canvasHeight;\n\n    // Margin outside the visible canvas to spawn meteorites\n    const margin = 50;\n\n    // Total perimeter length of the outer rectangle (including margin)\n    const perimeter: number = 2 * (canvasWidth + 2 * margin) + 2 * (canvasHeight + 2 * margin);\n\n    // Pick a random position along this perimeter line\n    const pos: number = Math.random() * perimeter;\n\n    // Define lengths of each side\n    const topSideLength: number = canvasWidth + 2 * margin;\n    const rightSideLength: number = canvasHeight + 2 * margin;\n    const bottomSideLength: number = canvasWidth + 2 * margin;\n    const leftSideLength: number = canvasHeight + 2 * margin;\n\n    let x: number = 0, y: number = 0;\n\n    if (pos < topSideLength) {\n        // Top side (left to right)\n        x = -margin + pos;\n        y = -margin;\n    } else if (pos < topSideLength + rightSideLength) {\n        // Right side (top to bottom)\n        x = canvasWidth + margin;\n        y = -margin + (pos - topSideLength);\n    } else if (pos < topSideLength + rightSideLength + bottomSideLength) {\n        // Bottom side (right to left)\n        x = canvasWidth + margin - (pos - topSideLength - rightSideLength);\n        y = canvasHeight + margin;\n    } else {\n        // Left side (bottom to top)\n        x = -margin;\n        y = canvasHeight + margin - (pos - topSideLength - rightSideLength - bottomSideLength);\n    }\n\n    return { x, y };\n}\n\n/**\n * Calculates a random position near the center of the canvas.\n *\n * @returns An object with x and y coordinates of a random position near center.\n */\nfunction getRandomTargetNearCenter(): { x: number, y: number } {\n    const centerX: number = config.game.canvasWidth / 2;\n    const centerY: number = config.game.canvasHeight / 2;\n\n    // Add some randomness to the center position to avoid meteorites always going directly to the center\n    const randomRadius: number = Math.random() * (config.game.canvasWidth * 0.8); // Radius between 0 and 80% of canvas width\n    const randomAngle: number = Math.random() * Math.PI * 2; // Random angle in radians\n\n    const targetX: number = centerX + randomRadius * Math.cos(randomAngle);\n    const targetY: number = centerY + randomRadius * Math.sin(randomAngle);\n\n    return { x: targetX, y: targetY };\n}\n\n\n/**\n * The function is responsible for setting the interval of the\n * meteorite spawn, defining its initial characteristics and position.\n *\n * @param meteorites - The current list of meteorites in the game.\n * @param ctx - The canvas rendering context.\n */\nexport function setSpawnMeteoriteInterval(meteorites: Meteorite[], ctx: CanvasRenderingContext2D): void {\n    meteoriteSpawnInterval = setInterval((): void => {\n        const position: { x:number, y:number } = getRandomEdgePosition();\n        const target: { x: number, y: number } = getRandomTargetNearCenter(); // Target near the center\n\n        // Calculate direction to the target\n        const dx: number = target.x - position.x;\n        const dy: number = target.y - position.y;\n        const distance: number = Math.sqrt(dx * dx + dy * dy);\n        const velocity = { x: (dx / distance) * 3, y: (dy / distance) * 3 }; // Speed of meteorite\n\n        // Create meteorite instance with direction and velocity\n        meteorites.push(\n            new Meteorite({\n                ctx,\n                position,\n                velocity, // Initial velocity that directs the meteorite towards the target\n                target,   // Pass target to Meteorite\n            })\n        );\n    }, meteoriteSpawnIntervalTime);\n}\n\n\n/**\n * Clears the interval responsible for spawning meteorites,\n * stopping new meteorites from being generated.\n */\nexport function removeSpawnMeteoriteInterval(): void {\n    if (meteoriteSpawnInterval) {\n        clearInterval(meteoriteSpawnInterval);\n    }\n}"]}